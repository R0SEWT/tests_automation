name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verify installed dependencies
      run: |
        pip check

    - name: Run tests with coverage
      run: |
        pytest --cov=src/redactionAssistant --cov-report=xml --cov-fail-under=80

    # Upload coverage to Codecov (con token en tu repo principal)
    - name: Upload coverage to Codecov
      if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}   # <-- agrega este secret en GitHub
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        verbose: true

    # Fallback para PRs desde forks (no hay acceso a secrets)
    - name: Upload coverage to Codecov (tokenless fallback)
      if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository }}
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        verbose: true
      continue-on-error: true

    - name: Generate coverage badge
      if: github.ref == 'refs/heads/main'
      run: |
        # Esto normalmente usa un action externo
        echo "Coverage report generated and uploaded"
